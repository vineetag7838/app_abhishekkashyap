pipeline {
  agent any
  environment{
      username = 'kashyapabhishek123'
      project_id = 'prismatic-grail-320808'
      cluster_name = 'cluster-1'
      location = 'us-central1-c'
      credentials_id = 'CloudGKE'
      docker_port = "${env.BRANCH_NAME == "develop" ? "7300" : "7200"}"
      gke_port = "${env.BRANCH_NAME == "develop" ? "30158" : "30157"}"
      branchname="${env.BRANCH_NAME == "develop" ? "develop" : "master"}"
      registry = "kashyapabhishek123/i-abhishekkashyap-${branchname}"
      
  }

  tools {
    maven 'Maven3'
    
  }

  options {
    timestamps()
    timeout(time: 1, unit: 'HOURS')

  }
  stages {
    stage('Build') {
      steps {
        bat 'mvn -f demosampleapplication/pom.xml clean install'
      }
    }
    stage('Sonar Analysis') {
      when {
        branch 'develop'
      }
      steps {
        withSonarQubeEnv(credentialsId: 'Test_Sonar', installationName: 'Test_Sonar') {
          bat 'mvn -f demosampleapplication/pom.xml sonar:sonar -Dsonar.projectKey=sonar-abhishekkashyap -Dsonar.host.url=http://localhost:9000'
        }
      }
    }

    stage('Unit Testing') {
      when {
        branch 'master'
      }
      steps {
        bat 'mvn -f demosampleapplication/pom.xml test'
      }
    }

    stage('Docker Image') {
      steps {
        script {
          bat "docker build --build-arg port=${docker_port} --build-arg port1=${gke_port} -t ${registry}:${BUILD_NUMBER} . -f demosampleapplication/Dockerfile"
          withDockerRegistry([credentialsId: 'DockerHub', url: 'https://registry.hub.docker.com']) {
            bat "docker tag ${registry}:${BUILD_NUMBER} ${username}/c-abhishekkashyap-${branchname}:${BUILD_NUMBER}"
            bat "docker tag ${registry}:${BUILD_NUMBER} ${username}/c-abhishekkashyap-${branchname}:latest"
          }
        }
      }
    }

    stage('Containers') {
      steps {
        parallel(
          'PreContainerCheck': {
            script {
              result = bat (
                script: "docker ps --filter publish=8080  --format '{{.ID}}'",
                returnStdout: true
              ).trim() 
	      
	      echo result
              if (result != '') {
                bat (
//                   script: "docker stop "$(docker ps --filter publish=8080  --format '{{.ID}}')"",
//                   returnStdout: false
                )
              }

              result = bat(
                script: "docker ps --filter expose=8080  --format '{{.ID}}'",
                returnStdout: true
              ).trim()
              if (result != '') {
                bat(
//                   script: "docker stop "$(docker ps --filter expose=8080  --format '{{.ID}}')"",
//                   returnStdout: false
                )
              }

            }
          },
          'PushToDockerHub': {
            withDockerRegistry([credentialsId: 'DockerHub', url: ""]) {
              bat "docker push ${username}/c-abhishekkashyap-${branchname}:${BUILD_NUMBER}"
              bat "docker push ${username}/c-abhishekkashyap-${branchname}:latest"
            }
          }
        )
      }
    }

    stage('Docker Deployment') {
      steps {
        script {
          bat "docker container run -d --publish ${docker_port}:8080 ${username}/c-abhishekkashyap-${branchname}:latest"
        }
      }
    }
    stage('Kubernetes Deployment') {
      steps {
	  bat "kubectl apply -f demosampleapplication/deployment.yaml --namespace=kubernetes-cluster-abhishekkashyap"
      }
    }

  }

  post {
    always {
      junit "demosampleapplication/target/surefire-reports/*.xml"
    }
  }
}


// pipeline {
//   agent any
//   environment{
//       username = 'kashyapabhishek123'
//       project_id = 'prismatic-grail-320808'
//       cluster_name = 'cluster-1'
//       location = 'us-central1-c'
//       credentials_id = 'CloudGKE'
//       docker_port = "${env.BRANCH_NAME == "develop" ? "7300" : "7200"}"
//       gke_port = "${env.BRANCH_NAME == "develop" ? "30158" : "30157"}"
//       branchname="${env.BRANCH_NAME == "develop" ? "develop" : "master"}"
//       registry = "kashyapabhishek123/i-abhishekkashyap-${branchname}"
      
//   }

//   tools {
//     maven 'MAVEN_HOME'
//     dockerTool 'Test_Docker'
//   }

//   options {
//     timestamps()
//     timeout(time: 1, unit: 'HOURS')

//   }
//   stages {
//     stage('Build') {
//       steps {
//         sh 'mvn -f demosampleapplication/pom.xml clean install'
//       }
//     }
//     stage('Sonar Analysis') {
//       when {
//         branch 'develop'
//       }
//       steps {
//         withSonarQubeEnv(credentialsId: 'Test_Sonar', installationName: 'Test_Sonar') {
//           sh 'mvn -f demosampleapplication/pom.xml sonar:sonar -Dsonar.projectKey=sonar-abhishekkashyap -Dsonar.host.url=http://localhost:8112'
//         }
//       }
//     }

//     stage('Unit Testing') {
//       when {
//         branch 'master'
//       }
//       steps {
//         sh 'mvn -f demosampleapplication/pom.xml test'
//       }
//     }

//     stage('Docker Image') {
//       steps {
//         script {
//           sh 'docker build --build-arg port=${docker_port} --build-arg port1=${gke_port} -t ${registry}:${BUILD_NUMBER} . -f demosampleapplication/Dockerfile'
//           withDockerRegistry([credentialsId: 'DockerHub', url: 'https://registry.hub.docker.com']) {
//             sh 'docker tag ${registry}:${BUILD_NUMBER} ${username}/c-abhishekkashyap-${branchname}:${BUILD_NUMBER}'
//             sh 'docker tag ${registry}:${BUILD_NUMBER} ${username}/c-abhishekkashyap-${branchname}:latest'
//           }
//         }
//       }
//     }

//     stage('Containers') {
//       steps {
//         parallel(
//           'PreContainerCheck': {
//             script {
//               result = sh(
//                 script: 'docker ps --filter publish=8080  --format "{{.ID}}"',
//                 returnStdout: true
//               ).trim()
//               if (result != '') {
//                 sh(
//                   script: 'docker stop $(docker ps --filter publish=8080  --format "{{.ID}}")',
//                   returnStdout: false
//                 )
//               }

//               result = sh(
//                 script: 'docker ps --filter expose=8080  --format "{{.ID}}"',
//                 returnStdout: true
//               ).trim()
//               if (result != '') {
//                 sh(
//                   script: 'docker stop $(docker ps --filter expose=8080  --format "{{.ID}}")',
//                   returnStdout: false
//                 )
//               }

//             }
//           },
//           'PushToDockerHub': {
//             withDockerRegistry([credentialsId: 'DockerHub', url: 'https://registry.hub.docker.com']) {
//               sh 'docker push ${username}/c-abhishekkashyap-${branchname}:${BUILD_NUMBER}'
//               sh 'docker push ${username}/c-abhishekkashyap-${branchname}:latest'
//             }
//           }
//         )
//       }
//     }

//     stage('Docker Deployment') {
//       steps {
//         script {
//           sh 'docker container run -d --publish ${docker_port}:8080 ${username}/c-abhishekkashyap-${branchname}:latest'
//         }
//       }
//     }
//     stage('Kubernetes Deployment') {
//       steps {
// 	  sh 'kubectl apply -f demosampleapplication/deployment.yaml --namespace=kubernetes-cluster-abhishekkashyap'
//       }
//     }

//   }

//   post {
//     always {
//       junit 'demosampleapplication/target/surefire-reports/*.xml'
//     }
//   }
// }
